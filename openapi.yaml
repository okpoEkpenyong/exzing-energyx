openapi: 3.0.0
info:
  description: Exzing-EnergyX API for carbon tracking and energy solutions
  version: 1.0.0
  title: Exzing-EnergyX API
  contact:
    email: support@exzing.com

components:
  schemas:
    CarbonCredit:
      type: object
      required:
        - creditId
        - amount
        - dateIssued
      properties:
        creditId:
          type: string
        amount:
          type: number
          format: float
        dateIssued:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - active
            - retired
            - pending
    EnergyUsage:
      type: object
      required:
        - deviceId
        - usageAmount
        - timestamp
      properties:
        deviceId:
          type: string
        usageAmount:
          type: number
          format: float
        timestamp:
          type: string
          format: date-time
    IoTDevice:
      type: object
      required:
        - deviceId
        - name
        - status
      properties:
        deviceId:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - active
            - inactive
            - error

  parameters:
    deviceId:
      in: path
      required: true
      name: deviceId
      description: The IoT device unique identifier
      schema:
        type: string
    creditId:
      in: path
      required: true
      name: creditId
      description: The Carbon Credit unique identifier
      schema:
        type: string
    top:
      in: query
      required: false
      name: top
      description: The max number of items to return in a result
      schema:
        type: number
        default: 20
    skip:
      in: query
      required: false
      name: skip
      description: The number of items to skip in results
      schema:
        type: number
        default: 0

  requestBodies:
    CarbonCredit:
      description: The Carbon Credit to be created
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CarbonCredit"
    EnergyUsage:
      description: The Energy Usage data to be recorded
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EnergyUsage"
    IoTDevice:
      description: The IoT Device information
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/IoTDevice"

  responses:
    CarbonCredit:
      description: A Carbon Credit result
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CarbonCredit"
    CarbonCreditArray:
      description: An array of Carbon Credits
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/CarbonCredit"
    EnergyUsage:
      description: An Energy Usage record
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EnergyUsage"
    EnergyUsageArray:
      description: An array of Energy Usage records
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/EnergyUsage"
    IoTDevice:
      description: An IoT Device result
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/IoTDevice"
    IoTDeviceArray:
      description: An array of IoT Devices
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/IoTDevice"

paths:
  /credits:
    get:
      operationId: GetCarbonCredits
      summary: Gets an array of Carbon Credits
      tags:
        - Carbon Credits
      parameters:
        - $ref: "#/components/parameters/top"
        - $ref: "#/components/parameters/skip"
      responses:
        200:
          $ref: "#/components/responses/CarbonCreditArray"
    post:
      operationId: CreateCarbonCredit
      summary: Creates a new Carbon Credit
      tags:
        - Carbon Credits
      requestBody:
        $ref: "#/components/requestBodies/CarbonCredit"
      responses:
        201:
          $ref: "#/components/responses/CarbonCredit"
        400:
          description: Invalid request schema

  /credits/{creditId}:
    get:
      operationId: GetCarbonCreditById
      summary: Gets a Carbon Credit by unique identifier
      tags:
        - Carbon Credits
      parameters:
        - $ref: "#/components/parameters/creditId"
      responses:
        200:
          $ref: "#/components/responses/CarbonCredit"
        404:
          description: Carbon Credit not found
    delete:
      operationId: DeleteCarbonCreditById
      summary: Deletes a Carbon Credit by unique identifier
      tags:
        - Carbon Credits
      parameters:
        - $ref: "#/components/parameters/creditId"
      responses:
        204:
          description: Carbon Credit deleted successfully
        404:
          description: Carbon Credit not found

  /usage:
    get:
      operationId: GetEnergyUsage
      summary: Gets an array of Energy Usage records
      tags:
        - Energy Usage
      parameters:
        - $ref: "#/components/parameters/top"
        - $ref: "#/components/parameters/skip"
      responses:
        200:
          $ref: "#/components/responses/EnergyUsageArray"
    post:
      operationId: CreateEnergyUsage
      summary: Records new Energy Usage data
      tags:
        - Energy Usage
      requestBody:
        $ref: "#/components/requestBodies/EnergyUsage"
      responses:
        201:
          $ref: "#/components/responses/EnergyUsage"
        400:
          description: Invalid request schema

  /devices:
    get:
      operationId: GetIoTDevices
      summary: Gets an array of IoT devices
      tags:
        - IoT Devices
      parameters:
        - $ref: "#/components/parameters/top"
        - $ref: "#/components/parameters/skip"
      responses:
        200:
          $ref: "#/components/responses/IoTDeviceArray"
    post:
      operationId: CreateIoTDevice
      summary: Registers a new IoT Device
      tags:
        - IoT Devices
      requestBody:
        $ref: "#/components/requestBodies/IoTDevice"
      responses:
        201:
          $ref: "#/components/responses/IoTDevice"
        400:
          description: Invalid request schema

  /devices/{deviceId}:
    get:
      operationId: GetIoTDeviceById
      summary: Gets an IoT Device by unique identifier
      tags:
        - IoT Devices
      parameters:
        - $ref: "#/components/parameters/deviceId"
      responses:
        200:
          $ref: "#/components/responses/IoTDevice"
        404:
          description: IoT Device not found
    put:
      operationId: UpdateIoTDeviceById
      summary: Updates an IoT Device by unique identifier
      tags:
        - IoT Devices
      requestBody:
        $ref: "#/components/requestBodies/IoTDevice"
      parameters:
        - $ref: "#/components/parameters/deviceId"
      responses:
        200:
          $ref: "#/components/responses/IoTDevice"
        404:
          description: IoT Device not found
        400:
          description: IoT Device is invalid
    delete:
      operationId: DeleteIoTDeviceById
      summary: Deletes an IoT Device by unique identifier
      tags:
        - IoT Devices
      parameters:
        - $ref: "#/components/parameters/deviceId"
      responses:
        204:
          description: IoT Device deleted successfully
        404:
          description: IoT Device not found
